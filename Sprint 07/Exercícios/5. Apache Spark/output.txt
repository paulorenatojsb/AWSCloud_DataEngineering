>>> for word, count in resultado:
...     print(word, count)
...
# 1
Apresentacao 1
nome 1
Paulo 1
Junco 1
da 1
resido 1
Ciencia 1
na 3
UNIVESP 1
Paulista), 1
o 2
3o 1
adicto 1
area 3
nos 1
proporcionar, 1
estagio 1
busco 1
desenvolver 1
nesse 1
segmento. 1
![Minha 1
Possuo 1
previa 1
tecnologia, 1
sempre 1
relacionado 1
vendas, 1
Hoje 1
sou 1
Success 1
uma 1
empresa 1
Tecnologia 1
Em 4
tempo 1
livre, 1
minha 3
- 12
filho 1
principalmente 1
Sempre 1
me 1
conhecimento 1
muito 2
feliz 1
por 1
programa 1
espero 1
contribuir 1
aprender 1
equipe 1
colegas 1
## 1
README 1
1. 1
[Sprint 10
3](./Sprint%2003/README.md) 1
**Docker** 1
**AWS 2
8] 1
breve! 3
9. 1
Pessoal 1
Meu 1
e 10
Renato 1
Silva 1
Braga 1
em 3
Pinhalzinho/SP. 1
Atualmente, 1
estou 2
cursando 1
de 7
Dados 1
(Polo 1
Braganca 1
onde 1
concluindo 1
Semestre. 1
Sou 1
pela 1
tecnologia 1
tudo 1
que 3
ela 1
pode 1
com 4
minhas 1
habilidades 1
Foto](./Sprint%2001/Evidências/photo_eu.jpg) 1
experiencia 1
porem 1
a 2
relacionamento 1
ou 1
customer 1
success. 1
Coordenador 1
Customer 1
chamada 1
SmartTravel 1
IT. 1
meu 1
gosto 1
estar 1
familia 1
esposa 1
meus 1
pets. 1
posso, 1
procuro 1
envolver 1
atividades 1
estimulem 1
curiosidade 1
tecnologia. 1
Estou 1
fazer 1
parte 1
deste 1
os 1
monitores. 1
Sprints 1
1](./Sprint%2001/README.md) 1
**Linux 1
Shell 1
Script** 1
2. 1
2](./Sprint%2002/README.MD) 1
**SQL** 1
3. 1
**Python** 1
4. 1
4](./Sprint%2004/README.md) 1
5. 1
5](./Sprint%2005/README.md) 1
Certification** 2
6. 1
6](./Sprint%2006/README.md) 1
7. 1
7](./Sprint%2007/README.md) 1
8. 1
9] 1
10. 1
10] 1
>>> wordCountsSorted = wordCounts.map(lambda x: (x[1], x[0])).sortByKey(False)
>>> wordCountsSorted.collect()
[(12, '-'), (10, '[Sprint'), (10, 'e'), (7, 'de'), (4, 'Em'), (4, 'com'), (3, 'na'), (3, 'area'), (3, 'minha'), (3, 'breve!'), (3, 'em'), (3, 'que'), (2, 'o'), (2, 'muito'), (2, '**AWS'), (2, 'estou'), (2, 'a'), (2, 'Certification**'), (1, '#'), (1, 'Apresentacao'), (1, 'nome'), (1, 'Paulo'), (1, 'Junco'), (1, 'da'), (1, 'resido'), (1, 'Ciencia'), (1, 'UNIVESP'), (1, 'Paulista),'), (1, '3o'), (1, 'adicto'), (1, 'nos'), (1, 'proporcionar,'), (1, 'estagio'), (1, 'busco'), (1, 'desenvolver'), (1, 'nesse'), (1, 'segmento.'), (1, '![Minha'), (1, 'Possuo'), (1, 'previa'), (1, 'tecnologia,'), (1, 'sempre'), (1, 'relacionado'), (1, 'vendas,'), (1, 'Hoje'), (1, 'sou'), (1, 'Success'), (1, 'uma'), (1, 'empresa'), (1, 'Tecnologia'), (1, 'tempo'), (1, 'livre,'), (1, 'filho'), (1, 'principalmente'), (1, 'Sempre'), (1, 'me'), (1, 'conhecimento'), (1, 'feliz'), (1, 'por'), (1, 'programa'), (1, 'espero'), (1, 'contribuir'), (1, 'aprender'), (1, 'equipe'), (1, 'colegas'), (1, '##'), (1, 'README'), (1, '1.'), (1, '3](./Sprint%2003/README.md)'), (1, '**Docker**'), (1, '8]'), (1, '9.'), (1, 'Pessoal'), (1, 'Meu'), (1, 'Renato'), (1, 'Silva'), (1, 'Braga'), (1, 'Pinhalzinho/SP.'), (1, 'Atualmente,'), (1, 'cursando'), (1, 'Dados'), (1, '(Polo'), (1, 'Braganca'), (1, 'onde'), (1, 'concluindo'), (1, 'Semestre.'), (1, 'Sou'), (1, 'pela'), (1, 'tecnologia'), (1, 'tudo'), (1, 'ela'), (1, 'pode'), (1, 'minhas'), (1, 'habilidades'), (1, 'Foto](./Sprint%2001/Evidências/photo_eu.jpg)'), (1, 'experiencia'), (1, 'porem'), (1, 'relacionamento'), (1, 'ou'), (1, 'customer'), (1, 'success.'), (1, 'Coordenador'), (1, 'Customer'), (1, 'chamada'), (1, 'SmartTravel'), (1, 'IT.'), (1, 'meu'), (1, 'gosto'), (1, 'estar'), (1, 'familia'), (1, 'esposa'), (1, 'meus'), (1, 'pets.'), (1, 'posso,'), (1, 'procuro'), (1, 'envolver'), (1, 'atividades'), (1, 'estimulem'), (1, 'curiosidade'), (1, 'tecnologia.'), (1, 'Estou'), (1, 'fazer'), (1, 'parte'), (1, 'deste'), (1, 'os'), (1, 'monitores.'), (1, 'Sprints'), (1, '1](./Sprint%2001/README.md)'), (1, '**Linux'), (1, 'Shell'), (1, 'Script**'), (1, '2.'), (1, '2](./Sprint%2002/README.MD)'), (1, '**SQL**'), (1, '3.'), (1, '**Python**'), (1, '4.'), (1, '4](./Sprint%2004/README.md)'), (1, '5.'), (1, '5](./Sprint%2005/README.md)'), (1, '6.'), (1, '6](./Sprint%2006/README.md)'), (1, '7.'), (1, '7](./Sprint%2007/README.md)'), (1, '8.'), (1, '9]'), (1, '10.'), (1, '10]')]
>>>